/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:'Futura PT Book';src:url(../fonts/FuturaPT-Book.eot);src:local("../fonts/Futura PT Book"),local("../fonts/FuturaPT-Book"),url(../fonts/FuturaPT-Book.eot?#iefix) format("embedded-opentype"),url(../fonts/FuturaPT-Book.woff) format("woff"),url(../fonts/FuturaPT-Book.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:'Futura PT';src:url(../fonts/FuturaPT-Bold.eot);src:local("../fonts/Futura PT Bold"),local("../fonts/FuturaPT-Bold"),url(../fonts/FuturaPT-Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/FuturaPT-Bold.woff) format("woff"),url(../fonts/FuturaPT-Bold.ttf) format("truetype");font-weight:700;font-style:normal}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-font-smoothing:antialiased;-webkit-tap-highlight-color:transparent;margin:0;padding:0}:focus,a{outline:nonce;text-decoration:none;color:#fff}button,input{border:0;outline:0;border-radius:0}svg{height:auto;width:auto}ul{list-style:none}img{max-width:100%}.body{font:16px "Futura PT Book","Times New Roman","Arial Black",sans-serif;color:#fff}.container{margin:0 auto;width:100%;max-width:1278px}.header{background:#282828;padding:20px 0}.header-contacts__list{list-style:none;color:#fff}.header-contacts__item{padding-bottom:10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:16px}.header-contacts__item:last-child{padding-bottom:0}.header-contacts__icon{padding-right:10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-contacts__svg{width:16px;height:16px;fill:#559c31}.header>.container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.logo{display:-webkit-box;display:-ms-flexbox;display:flex}.logo>svg{display:-webkit-box;display:-ms-flexbox;display:flex;width:250px;height:60px}.nav__list{list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;font-family:"Futura PT","Times New Roman","Arial Black",sans-serif}.nav__item{padding-right:30px}.nav__link{font-size:14px;font-weight:700;text-transform:uppercase}.news{background:#282828;padding:40px 0}.news__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.news-story{-ms-flex-preferred-size:25%;flex-basis:25%}.news-story__link{font-family:"Futura PT","Times New Roman","Arial Black",sans-serif;text-transform:uppercase;color:#559c31}.news-story__image{margin-top:10px;position:relative}.news-story__image::before{background:rgba(0,0,0,.3);content:'';position:absolute;top:0;left:0;width:100%;height:100%}.news-story__img{-o-object-fit:contain;object-fit:contain;width:100%;height:auto;display:block}.news-story__title{font:16px/1.2 "Futura PT","Times New Roman","Arial Black",sans-serif;padding:10px;position:absolute;bottom:0;left:0;text-shadow:1px 1px 3px #141414}.news-story__text{padding-top:10px;line-height:1.45}.advantages{font:18px "Futura PT","Times New Roman","Arial Black",sans-serif;background:#559c31;padding:25px 0;text-transform:uppercase}.advantages__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.advantages__item{-ms-flex-preferred-size:22%;flex-basis:22%;display:-webkit-box;display:-ms-flexbox;display:flex}.advantages__item:nth-of-type(3){-ms-flex-preferred-size:16%;flex-basis:16%}.advantages__icon{padding-right:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.advantages__icon:last-child{padding-right:0}.advantages__svg{width:50px;height:50px;fill:#141414}.footer{background:#282828;padding:40px 0}.footer__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer-column{-ms-flex-preferred-size:25%;flex-basis:25%}.footer-column__title{font:22px "Futura PT","Times New Roman","Arial Black",sans-serif;padding-bottom:15px}.footer-column__item{padding-bottom:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer-column__item:last-child{padding-bottom:0}.footer-column__link{font-size:16px}.footer-column__text{line-height:1.25;font-size:16px}.footer-column__text_lh-medium{line-height:1.6}.footer-column__icon{padding-right:10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer-column__ttu{text-transform:uppercase;font-size:14px}.main{background:#141414;height:50vh;width:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
